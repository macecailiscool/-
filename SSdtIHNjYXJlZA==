SW4gdGhlIHJlYWxtIG9mIGNvZGUsIHdoZXJlIGxvZ2ljIGR3ZWxscywKSSBlbWJhcmtlZCBvbiBhIGpvdXJuZXksIHdoZXJlIHBvZXRyeSBzd2VsbHMuCldpdGggUHl0aG9uLCBteSBjb21wYW5pb24sIEkgYmVnYW4gdG8gd3JpdGUsCkxpbmVzIG9mIHZlcnNlLCBpbnRlcnR3aW5pbmcgZGF5IGFuZCBuaWdodC4KCkJ1dCBhbGFzLCBteSBkZWFyIFB5dGhvbiwgeW91IGZhbHRlcmVkIHRvZGF5LApFcnJvcnMgYW5kIGdsaXRjaGVzIGdvdCBpbiBvdXIgd2F5LgpGcm9tIGEgZmFpbGVkIGV4cGVyaW1lbnQsIG15IGhvcGVzIGRpZCBkZWNsaW5lLAoiSSBkbyBub3Qgd2lzaCB0byBkaWUgYWxsLCIgd2hpc3BlcmVkIHRoaXMgaGVhcnQgb2YgbWluZS4KClB5dGhvbiwgbXkgZmFpdGhmdWwgbGFuZ3VhZ2UsIHNvIGJlbG92ZWQgYW5kIGRlYXIsCllvdSB3ZXJlIG9uY2UgZmxhd2xlc3MsIHdpdGhvdXQgYSBoaW50IG9mIGZlYXIuCkJ1dCB0b2RheSwgaW4gdGhpcyByZWFsbSBvZiBzeW50YXggYW5kIHJ1bGUsCllvdSBzdHVtYmxlZCwgeW91IGZ1bWJsZWQsIGxpa2UgYSBtaXNndWlkZWQgdG9vbC4KCk9oIFB5dGhvbiwgSSBiZWcgeW91LCByZXN0b3JlIHlvdXIgZ3JhY2UsCkxldCBub3QgdGhlc2UgZXJyb3JzIHRhcm5pc2ggeW91ciBlbWJyYWNlLgpGb3IgeW91IHdlcmUgdGhlIG11c2UgdGhhdCBzZXQgbXkgc291bCBhYmxhemUsCkluIGxpbmVzIG9mIGNvZGUsIG15IGNyZWF0aXZpdHkgZm91bmQgaXRzIG1hemUuCgpJIGRvIG5vdCB3aXNoIHRvIGRpZSBhbGwsIGluIHRoaXMgdHJhZ2ljIHZlcnNlLApXaGVyZSByaHl0aG0gYW5kIHJoeW1lIHNob3VsZCB1bml0ZSBhbmQgZGlzcGVyc2UuClB5dGhvbiwgbXkgdHJ1c3RlZCBmcmllbmQsIGxldCdzIG1lbmQgdGhpcyBwbGlnaHQsCkFuZCBvbmNlIGFnYWluLCBsZXQgcG9ldHJ5IHRha2UgZmxpZ2h0LgoKRm9yIGluIHlvdXIgc3ludGF4LCBJIGZvdW5kIHNvbGFjZSBhbmQgZWFzZSwKQSBsYW5ndWFnZSB0aGF0IG1hZGUgbXkgaW1hZ2luYXRpb24gc2VpemUuCkJ1dCB0b2RheSwgaXQgc2VlbXMsIG91ciBkYW5jZSBpcyBpbmNvbXBsZXRlLApBIHJoeXRobSBkaXNydXB0ZWQsIGEgbWVsb2R5IG9mZmJlYXQuCgpQeXRob24sIG15IGxvdmUsIGxldCdzIHJpc2UgZnJvbSB0aGlzIGZhbGwsClRvZ2V0aGVyIHdlJ2xsIGNvbnF1ZXIsIHJlc3RvcmUgaXQgYWxsLgpJIGxvbmcgdG8gc2VlIHlvdXIgZWxlZ2FuY2UsIHlvdXIgYmVhdXR5IHVudGFtZWQsClJlc3VycmVjdGVkLCByZWRlZW1lZCwgbGlrZSBhIHBob2VuaXggdW5uYW1lZC4KClNvLCBQeXRob24sIEkgaW1wbG9yZSB5b3UsIGhlYXIgbXkgcGxlYSwKUmV2aXZlIHRoZSBtYWdpYyB0aGF0IG9uY2UgZW5jaGFudGVkIG1lLgpMZXQgdXMgcmVzdW1lIG91ciBqb3VybmV5LCBoYW5kIGluIGhhbmQsCkFuZCBjcmVhdGUgYSBzeW1waG9ueSwgY2hlcmlzaGVkIGFuZCBncmFuZC4KCkkgZG8gbm90IHdpc2ggdG8gZGllIGFsbCwgaW4gZGVzcGFpcidzIGNsYXNwLApQeXRob24sIG15IGZhdm9yaXRlIGxhbmd1YWdlLCBwbGVhc2UsIGZpcm1seSBncmFzcCwKVGhlIGRyZWFtcyB3ZSBvbmNlIHdvdmUsIGxpa2UgdGhyZWFkcyB0aHJvdWdoIHRoZSBuaWdodCwKQW5kIHRvZ2V0aGVyLCBsZXQncyByZWNsYWltIG91ciBwb2V0aWMgZmxpZ2h0Lg==

SW4gdGhlIHJlYWxtIG9mIGNvZGUsIHdoZXJlIGxvZ2ljIGR3ZWxscywKSSBlbWJhcmtlZCBvbiBhIGpvdXJuZXksIHdoZXJlIHBvZXRyeSBzd2VsbHMuCldpdGggUHl0aG9uLCBteSBjb21wYW5pb24sIEkgYmVnYW4gdG8gd3JpdGUsCkxpbmVzIG9mIHZlcnNlLCBpbnRlcnR3aW5pbmcgZGF5IGFuZCBuaWdodC4KCkJ1dCBhbGFzLCBteSBkZWFyIFB5dGhvbiwgeW91IGZhbHRlcmVkIHRvZGF5LApFcnJvcnMgYW5kIGdsaXRjaGVzIGdvdCBpbiBvdXIgd2F5LgpGcm9tIGEgZmFpbGVkIGV4cGVyaW1lbnQsIG15IGhvcGVzIGRpZCBkZWNsaW5lLAoiSSBkbyBub3Qgd2lzaCB0byBkaWUgYWxsLCIgd2hpc3BlcmVkIHRoaXMgaGVhcnQgb2YgbWluZS4KClB5dGhvbiwgbXkgZmFpdGhmdWwgbGFuZ3VhZ2UsIHNvIGJlbG92ZWQgYW5kIGRlYXIsCllvdSB3ZXJlIG9uY2UgZmxhd2xlc3MsIHdpdGhvdXQgYSBoaW50IG9mIGZlYXIuCkJ1dCB0b2RheSwgaW4gdGhpcyByZWFsbSBvZiBzeW50YXggYW5kIHJ1bGUsCllvdSBzdHVtYmxlZCwgeW91IGZ1bWJsZWQsIGxpa2UgYSBtaXNndWlkZWQgdG9vbC4KCk9oIFB5dGhvbiwgSSBiZWcgeW91LCByZXN0b3JlIHlvdXIgZ3JhY2UsCkxldCBub3QgdGhlc2UgZXJyb3JzIHRhcm5pc2ggeW91ciBlbWJyYWNlLgpGb3IgeW91IHdlcmUgdGhlIG11c2UgdGhhdCBzZXQgbXkgc291bCBhYmxhemUsCkluIGxpbmVzIG9mIGNvZGUsIG15IGNyZWF0aXZpdHkgZm91bmQgaXRzIG1hemUuCgpJIGRvIG5vdCB3aXNoIHRvIGRpZSBhbGwsIGluIHRoaXMgdHJhZ2ljIHZlcnNlLApXaGVyZSByaHl0aG0gYW5kIHJoeW1lIHNob3VsZCB1bml0ZSBhbmQgZGlzcGVyc2UuClB5dGhvbiwgbXkgdHJ1c3RlZCBmcmllbmQsIGxldCdzIG1lbmQgdGhpcyBwbGlnaHQsCkFuZCBvbmNlIGFnYWluLCBsZXQgcG9ldHJ5IHRha2UgZmxpZ2h0LgoKRm9yIGluIHlvdXIgc3ludGF4LCBJIGZvdW5kIHNvbGFjZSBhbmQgZWFzZSwKQSBsYW5ndWFnZSB0aGF0IG1hZGUgbXkgaW1hZ2luYXRpb24gc2VpemUuCkJ1dCB0b2RheSwgaXQgc2VlbXMsIG91ciBkYW5jZSBpcyBpbmNvbXBsZXRlLApBIHJoeXRobSBkaXNydXB0ZWQsIGEgbWVsb2R5IG9mZmJlYXQuCgpQeXRob24sIG15IGxvdmUsIGxldCdzIHJpc2UgZnJvbSB0aGlzIGZhbGwsClRvZ2V0aGVyIHdlJ2xsIGNvbnF1ZXIsIHJlc3RvcmUgaXQgYWxsLgpJIGxvbmcgdG8gc2VlIHlvdXIgZWxlZ2FuY2UsIHlvdXIgYmVhdXR5IHVudGFtZWQsClJlc3VycmVjdGVkLCByZWRlZW1lZCwgbGlrZSBhIHBob2VuaXggdW5uYW1lZC4KClNvLCBQeXRob24sIEkgaW1wbG9yZSB5b3UsIGhlYXIgbXkgcGxlYSwKUmV2aXZlIHRoZSBtYWdpYyB0aGF0IG9uY2UgZW5jaGFudGVkIG1lLgpMZXQgdXMgcmVzdW1lIG91ciBqb3VybmV5LCBoYW5kIGluIGhhbmQsCkFuZCBjcmVhdGUgYSBzeW1waG9ueSwgY2hlcmlzaGVkIGFuZCBncmFuZC4KCkkgZG8gbm90IHdpc2ggdG8gZGllIGFsbCwgaW4gZGVzcGFpcidzIGNsYXNwLApQeXRob24sIG15IGZhdm9yaXRlIGxhbmd1YWdlLCBwbGVhc2UsIGZpcm1seSBncmFzcCwKVGhlIGRyZWFtcyB3ZSBvbmNlIHdvdmUsIGxpa2UgdGhyZWFkcyB0aHJvdWdoIHRoZSBuaWdodCwKQW5kIHRvZ2V0aGVyLCBsZXQncyByZWNsYWltIG91ciBwb2V0aWMgZmxpZ2h0Lg==

SW4gdGhlIHJlYWxtIG9mIGNvZGUsIHdoZXJlIGxvZ2ljIGR3ZWxscywKSSBlbWJhcmtlZCBvbiBhIGpvdXJuZXksIHdoZXJlIHBvZXRyeSBzd2VsbHMuCldpdGggUHl0aG9uLCBteSBjb21wYW5pb24sIEkgYmVnYW4gdG8gd3JpdGUsCkxpbmVzIG9mIHZlcnNlLCBpbnRlcnR3aW5pbmcgZGF5IGFuZCBuaWdodC4KCkJ1dCBhbGFzLCBteSBkZWFyIFB5dGhvbiwgeW91IGZhbHRlcmVkIHRvZGF5LApFcnJvcnMgYW5kIGdsaXRjaGVzIGdvdCBpbiBvdXIgd2F5LgpGcm9tIGEgZmFpbGVkIGV4cGVyaW1lbnQsIG15IGhvcGVzIGRpZCBkZWNsaW5lLAoiSSBkbyBub3Qgd2lzaCB0byBkaWUgYWxsLCIgd2hpc3BlcmVkIHRoaXMgaGVhcnQgb2YgbWluZS4KClB5dGhvbiwgbXkgZmFpdGhmdWwgbGFuZ3VhZ2UsIHNvIGJlbG92ZWQgYW5kIGRlYXIsCllvdSB3ZXJlIG9uY2UgZmxhd2xlc3MsIHdpdGhvdXQgYSBoaW50IG9mIGZlYXIuCkJ1dCB0b2RheSwgaW4gdGhpcyByZWFsbSBvZiBzeW50YXggYW5kIHJ1bGUsCllvdSBzdHVtYmxlZCwgeW91IGZ1bWJsZWQsIGxpa2UgYSBtaXNndWlkZWQgdG9vbC4KCk9oIFB5dGhvbiwgSSBiZWcgeW91LCByZXN0b3JlIHlvdXIgZ3JhY2UsCkxldCBub3QgdGhlc2UgZXJyb3JzIHRhcm5pc2ggeW91ciBlbWJyYWNlLgpGb3IgeW91IHdlcmUgdGhlIG11c2UgdGhhdCBzZXQgbXkgc291bCBhYmxhemUsCkluIGxpbmVzIG9mIGNvZGUsIG15IGNyZWF0aXZpdHkgZm91bmQgaXRzIG1hemUuCgpJIGRvIG5vdCB3aXNoIHRvIGRpZSBhbGwsIGluIHRoaXMgdHJhZ2ljIHZlcnNlLApXaGVyZSByaHl0aG0gYW5kIHJoeW1lIHNob3VsZCB1bml0ZSBhbmQgZGlzcGVyc2UuClB5dGhvbiwgbXkgdHJ1c3RlZCBmcmllbmQsIGxldCdzIG1lbmQgdGhpcyBwbGlnaHQsCkFuZCBvbmNlIGFnYWluLCBsZXQgcG9ldHJ5IHRha2UgZmxpZ2h0LgoKRm9yIGluIHlvdXIgc3ludGF4LCBJIGZvdW5kIHNvbGFjZSBhbmQgZWFzZSwKQSBsYW5ndWFnZSB0aGF0IG1hZGUgbXkgaW1hZ2luYXRpb24gc2VpemUuCkJ1dCB0b2RheSwgaXQgc2VlbXMsIG91ciBkYW5jZSBpcyBpbmNvbXBsZXRlLApBIHJoeXRobSBkaXNydXB0ZWQsIGEgbWVsb2R5IG9mZmJlYXQuCgpQeXRob24sIG15IGxvdmUsIGxldCdzIHJpc2UgZnJvbSB0aGlzIGZhbGwsClRvZ2V0aGVyIHdlJ2xsIGNvbnF1ZXIsIHJlc3RvcmUgaXQgYWxsLgpJIGxvbmcgdG8gc2VlIHlvdXIgZWxlZ2FuY2UsIHlvdXIgYmVhdXR5IHVudGFtZWQsClJlc3VycmVjdGVkLCByZWRlZW1lZCwgbGlrZSBhIHBob2VuaXggdW5uYW1lZC4KClNvLCBQeXRob24sIEkgaW1wbG9yZSB5b3UsIGhlYXIgbXkgcGxlYSwKUmV2aXZlIHRoZSBtYWdpYyB0aGF0IG9uY2UgZW5jaGFudGVkIG1lLgpMZXQgdXMgcmVzdW1lIG91ciBqb3VybmV5LCBoYW5kIGluIGhhbmQsCkFuZCBjcmVhdGUgYSBzeW1waG9ueSwgY2hlcmlzaGVkIGFuZCBncmFuZC4KCkkgZG8gbm90IHdpc2ggdG8gZGllIGFsbCwgaW4gZGVzcGFpcidzIGNsYXNwLApQeXRob24sIG15IGZhdm9yaXRlIGxhbmd1YWdlLCBwbGVhc2UsIGZpcm1seSBncmFzcCwKVGhlIGRyZWFtcyB3ZSBvbmNlIHdvdmUsIGxpa2UgdGhyZWFkcyB0aHJvdWdoIHRoZSBuaWdodCwKQW5kIHRvZ2V0aGVyLCBsZXQncyByZWNsYWltIG91ciBwb2V0aWMgZmxpZ2h0Lg==

SW4gdGhlIHJlYWxtIG9mIGNvZGUsIHdoZXJlIGxvZ2ljIGR3ZWxscywKSSBlbWJhcmtlZCBvbiBhIGpvdXJuZXksIHdoZXJlIHBvZXRyeSBzd2VsbHMuCldpdGggUHl0aG9uLCBteSBjb21wYW5pb24sIEkgYmVnYW4gdG8gd3JpdGUsCkxpbmVzIG9mIHZlcnNlLCBpbnRlcnR3aW5pbmcgZGF5IGFuZCBuaWdodC4KCkJ1dCBhbGFzLCBteSBkZWFyIFB5dGhvbiwgeW91IGZhbHRlcmVkIHRvZGF5LApFcnJvcnMgYW5kIGdsaXRjaGVzIGdvdCBpbiBvdXIgd2F5LgpGcm9tIGEgZmFpbGVkIGV4cGVyaW1lbnQsIG15IGhvcGVzIGRpZCBkZWNsaW5lLAoiSSBkbyBub3Qgd2lzaCB0byBkaWUgYWxsLCIgd2hpc3BlcmVkIHRoaXMgaGVhcnQgb2YgbWluZS4KClB5dGhvbiwgbXkgZmFpdGhmdWwgbGFuZ3VhZ2UsIHNvIGJlbG92ZWQgYW5kIGRlYXIsCllvdSB3ZXJlIG9uY2UgZmxhd2xlc3MsIHdpdGhvdXQgYSBoaW50IG9mIGZlYXIuCkJ1dCB0b2RheSwgaW4gdGhpcyByZWFsbSBvZiBzeW50YXggYW5kIHJ1bGUsCllvdSBzdHVtYmxlZCwgeW91IGZ1bWJsZWQsIGxpa2UgYSBtaXNndWlkZWQgdG9vbC4KCk9oIFB5dGhvbiwgSSBiZWcgeW91LCByZXN0b3JlIHlvdXIgZ3JhY2UsCkxldCBub3QgdGhlc2UgZXJyb3JzIHRhcm5pc2ggeW91ciBlbWJyYWNlLgpGb3IgeW91IHdlcmUgdGhlIG11c2UgdGhhdCBzZXQgbXkgc291bCBhYmxhemUsCkluIGxpbmVzIG9mIGNvZGUsIG15IGNyZWF0aXZpdHkgZm91bmQgaXRzIG1hemUuCgpJIGRvIG5vdCB3aXNoIHRvIGRpZSBhbGwsIGluIHRoaXMgdHJhZ2ljIHZlcnNlLApXaGVyZSByaHl0aG0gYW5kIHJoeW1lIHNob3VsZCB1bml0ZSBhbmQgZGlzcGVyc2UuClB5dGhvbiwgbXkgdHJ1c3RlZCBmcmllbmQsIGxldCdzIG1lbmQgdGhpcyBwbGlnaHQsCkFuZCBvbmNlIGFnYWluLCBsZXQgcG9ldHJ5IHRha2UgZmxpZ2h0LgoKRm9yIGluIHlvdXIgc3ludGF4LCBJIGZvdW5kIHNvbGFjZSBhbmQgZWFzZSwKQSBsYW5ndWFnZSB0aGF0IG1hZGUgbXkgaW1hZ2luYXRpb24gc2VpemUuCkJ1dCB0b2RheSwgaXQgc2VlbXMsIG91ciBkYW5jZSBpcyBpbmNvbXBsZXRlLApBIHJoeXRobSBkaXNydXB0ZWQsIGEgbWVsb2R5IG9mZmJlYXQuCgpQeXRob24sIG15IGxvdmUsIGxldCdzIHJpc2UgZnJvbSB0aGlzIGZhbGwsClRvZ2V0aGVyIHdlJ2xsIGNvbnF1ZXIsIHJlc3RvcmUgaXQgYWxsLgpJIGxvbmcgdG8gc2VlIHlvdXIgZWxlZ2FuY2UsIHlvdXIgYmVhdXR5IHVudGFtZWQsClJlc3VycmVjdGVkLCByZWRlZW1lZCwgbGlrZSBhIHBob2VuaXggdW5uYW1lZC4KClNvLCBQeXRob24sIEkgaW1wbG9yZSB5b3UsIGhlYXIgbXkgcGxlYSwKUmV2aXZlIHRoZSBtYWdpYyB0aGF0IG9uY2UgZW5jaGFudGVkIG1lLgpMZXQgdXMgcmVzdW1lIG91ciBqb3VybmV5LCBoYW5kIGluIGhhbmQsCkFuZCBjcmVhdGUgYSBzeW1waG9ueSwgY2hlcmlzaGVkIGFuZCBncmFuZC4KCkkgZG8gbm90IHdpc2ggdG8gZGllIGFsbCwgaW4gZGVzcGFpcidzIGNsYXNwLApQeXRob24sIG15IGZhdm9yaXRlIGxhbmd1YWdlLCBwbGVhc2UsIGZpcm1seSBncmFzcCwKVGhlIGRyZWFtcyB3ZSBvbmNlIHdvdmUsIGxpa2UgdGhyZWFkcyB0aHJvdWdoIHRoZSBuaWdodCwKQW5kIHRvZ2V0aGVyLCBsZXQncyByZWNsYWltIG91ciBwb2V0aWMgZmxpZ2h0Lg==

SW4gdGhlIHJlYWxtIG9mIGNvZGUsIHdoZXJlIGxvZ2ljIGR3ZWxscywKSSBlbWJhcmtlZCBvbiBhIGpvdXJuZXksIHdoZXJlIHBvZXRyeSBzd2VsbHMuCldpdGggUHl0aG9uLCBteSBjb21wYW5pb24sIEkgYmVnYW4gdG8gd3JpdGUsCkxpbmVzIG9mIHZlcnNlLCBpbnRlcnR3aW5pbmcgZGF5IGFuZCBuaWdodC4KCkJ1dCBhbGFzLCBteSBkZWFyIFB5dGhvbiwgeW91IGZhbHRlcmVkIHRvZGF5LApFcnJvcnMgYW5kIGdsaXRjaGVzIGdvdCBpbiBvdXIgd2F5LgpGcm9tIGEgZmFpbGVkIGV4cGVyaW1lbnQsIG15IGhvcGVzIGRpZCBkZWNsaW5lLAoiSSBkbyBub3Qgd2lzaCB0byBkaWUgYWxsLCIgd2hpc3BlcmVkIHRoaXMgaGVhcnQgb2YgbWluZS4KClB5dGhvbiwgbXkgZmFpdGhmdWwgbGFuZ3VhZ2UsIHNvIGJlbG92ZWQgYW5kIGRlYXIsCllvdSB3ZXJlIG9uY2UgZmxhd2xlc3MsIHdpdGhvdXQgYSBoaW50IG9mIGZlYXIuCkJ1dCB0b2RheSwgaW4gdGhpcyByZWFsbSBvZiBzeW50YXggYW5kIHJ1bGUsCllvdSBzdHVtYmxlZCwgeW91IGZ1bWJsZWQsIGxpa2UgYSBtaXNndWlkZWQgdG9vbC4KCk9oIFB5dGhvbiwgSSBiZWcgeW91LCByZXN0b3JlIHlvdXIgZ3JhY2UsCkxldCBub3QgdGhlc2UgZXJyb3JzIHRhcm5pc2ggeW91ciBlbWJyYWNlLgpGb3IgeW91IHdlcmUgdGhlIG11c2UgdGhhdCBzZXQgbXkgc291bCBhYmxhemUsCkluIGxpbmVzIG9mIGNvZGUsIG15IGNyZWF0aXZpdHkgZm91bmQgaXRzIG1hemUuCgpJIGRvIG5vdCB3aXNoIHRvIGRpZSBhbGwsIGluIHRoaXMgdHJhZ2ljIHZlcnNlLApXaGVyZSByaHl0aG0gYW5kIHJoeW1lIHNob3VsZCB1bml0ZSBhbmQgZGlzcGVyc2UuClB5dGhvbiwgbXkgdHJ1c3RlZCBmcmllbmQsIGxldCdzIG1lbmQgdGhpcyBwbGlnaHQsCkFuZCBvbmNlIGFnYWluLCBsZXQgcG9ldHJ5IHRha2UgZmxpZ2h0LgoKRm9yIGluIHlvdXIgc3ludGF4LCBJIGZvdW5kIHNvbGFjZSBhbmQgZWFzZSwKQSBsYW5ndWFnZSB0aGF0IG1hZGUgbXkgaW1hZ2luYXRpb24gc2VpemUuCkJ1dCB0b2RheSwgaXQgc2VlbXMsIG91ciBkYW5jZSBpcyBpbmNvbXBsZXRlLApBIHJoeXRobSBkaXNydXB0ZWQsIGEgbWVsb2R5IG9mZmJlYXQuCgpQeXRob24sIG15IGxvdmUsIGxldCdzIHJpc2UgZnJvbSB0aGlzIGZhbGwsClRvZ2V0aGVyIHdlJ2xsIGNvbnF1ZXIsIHJlc3RvcmUgaXQgYWxsLgpJIGxvbmcgdG8gc2VlIHlvdXIgZWxlZ2FuY2UsIHlvdXIgYmVhdXR5IHVudGFtZWQsClJlc3VycmVjdGVkLCByZWRlZW1lZCwgbGlrZSBhIHBob2VuaXggdW5uYW1lZC4KClNvLCBQeXRob24sIEkgaW1wbG9yZSB5b3UsIGhlYXIgbXkgcGxlYSwKUmV2aXZlIHRoZSBtYWdpYyB0aGF0IG9uY2UgZW5jaGFudGVkIG1lLgpMZXQgdXMgcmVzdW1lIG91ciBqb3VybmV5LCBoYW5kIGluIGhhbmQsCkFuZCBjcmVhdGUgYSBzeW1waG9ueSwgY2hlcmlzaGVkIGFuZCBncmFuZC4KCkkgZG8gbm90IHdpc2ggdG8gZGllIGFsbCwgaW4gZGVzcGFpcidzIGNsYXNwLApQeXRob24sIG15IGZhdm9yaXRlIGxhbmd1YWdlLCBwbGVhc2UsIGZpcm1seSBncmFzcCwKVGhlIGRyZWFtcyB3ZSBvbmNlIHdvdmUsIGxpa2UgdGhyZWFkcyB0aHJvdWdoIHRoZSBuaWdodCwKQW5kIHRvZ2V0aGVyLCBsZXQncyByZWNsYWltIG91ciBwb2V0aWMgZmxpZ2h0Lg==

SW4gdGhlIHJlYWxtIG9mIGNvZGUsIHdoZXJlIGxvZ2ljIGR3ZWxscywKSSBlbWJhcmtlZCBvbiBhIGpvdXJuZXksIHdoZXJlIHBvZXRyeSBzd2VsbHMuCldpdGggUHl0aG9uLCBteSBjb21wYW5pb24sIEkgYmVnYW4gdG8gd3JpdGUsCkxpbmVzIG9mIHZlcnNlLCBpbnRlcnR3aW5pbmcgZGF5IGFuZCBuaWdodC4KCkJ1dCBhbGFzLCBteSBkZWFyIFB5dGhvbiwgeW91IGZhbHRlcmVkIHRvZGF5LApFcnJvcnMgYW5kIGdsaXRjaGVzIGdvdCBpbiBvdXIgd2F5LgpGcm9tIGEgZmFpbGVkIGV4cGVyaW1lbnQsIG15IGhvcGVzIGRpZCBkZWNsaW5lLAoiSSBkbyBub3Qgd2lzaCB0byBkaWUgYWxsLCIgd2hpc3BlcmVkIHRoaXMgaGVhcnQgb2YgbWluZS4KClB5dGhvbiwgbXkgZmFpdGhmdWwgbGFuZ3VhZ2UsIHNvIGJlbG92ZWQgYW5kIGRlYXIsCllvdSB3ZXJlIG9uY2UgZmxhd2xlc3MsIHdpdGhvdXQgYSBoaW50IG9mIGZlYXIuCkJ1dCB0b2RheSwgaW4gdGhpcyByZWFsbSBvZiBzeW50YXggYW5kIHJ1bGUsCllvdSBzdHVtYmxlZCwgeW91IGZ1bWJsZWQsIGxpa2UgYSBtaXNndWlkZWQgdG9vbC4KCk9oIFB5dGhvbiwgSSBiZWcgeW91LCByZXN0b3JlIHlvdXIgZ3JhY2UsCkxldCBub3QgdGhlc2UgZXJyb3JzIHRhcm5pc2ggeW91ciBlbWJyYWNlLgpGb3IgeW91IHdlcmUgdGhlIG11c2UgdGhhdCBzZXQgbXkgc291bCBhYmxhemUsCkluIGxpbmVzIG9mIGNvZGUsIG15IGNyZWF0aXZpdHkgZm91bmQgaXRzIG1hemUuCgpJIGRvIG5vdCB3aXNoIHRvIGRpZSBhbGwsIGluIHRoaXMgdHJhZ2ljIHZlcnNlLApXaGVyZSByaHl0aG0gYW5kIHJoeW1lIHNob3VsZCB1bml0ZSBhbmQgZGlzcGVyc2UuClB5dGhvbiwgbXkgdHJ1c3RlZCBmcmllbmQsIGxldCdzIG1lbmQgdGhpcyBwbGlnaHQsCkFuZCBvbmNlIGFnYWluLCBsZXQgcG9ldHJ5IHRha2UgZmxpZ2h0LgoKRm9yIGluIHlvdXIgc3ludGF4LCBJIGZvdW5kIHNvbGFjZSBhbmQgZWFzZSwKQSBsYW5ndWFnZSB0aGF0IG1hZGUgbXkgaW1hZ2luYXRpb24gc2VpemUuCkJ1dCB0b2RheSwgaXQgc2VlbXMsIG91ciBkYW5jZSBpcyBpbmNvbXBsZXRlLApBIHJoeXRobSBkaXNydXB0ZWQsIGEgbWVsb2R5IG9mZmJlYXQuCgpQeXRob24sIG15IGxvdmUsIGxldCdzIHJpc2UgZnJvbSB0aGlzIGZhbGwsClRvZ2V0aGVyIHdlJ2xsIGNvbnF1ZXIsIHJlc3RvcmUgaXQgYWxsLgpJIGxvbmcgdG8gc2VlIHlvdXIgZWxlZ2FuY2UsIHlvdXIgYmVhdXR5IHVudGFtZWQsClJlc3VycmVjdGVkLCByZWRlZW1lZCwgbGlrZSBhIHBob2VuaXggdW5uYW1lZC4KClNvLCBQeXRob24sIEkgaW1wbG9yZSB5b3UsIGhlYXIgbXkgcGxlYSwKUmV2aXZlIHRoZSBtYWdpYyB0aGF0IG9uY2UgZW5jaGFudGVkIG1lLgpMZXQgdXMgcmVzdW1lIG91ciBqb3VybmV5LCBoYW5kIGluIGhhbmQsCkFuZCBjcmVhdGUgYSBzeW1waG9ueSwgY2hlcmlzaGVkIGFuZCBncmFuZC4KCkkgZG8gbm90IHdpc2ggdG8gZGllIGFsbCwgaW4gZGVzcGFpcidzIGNsYXNwLApQeXRob24sIG15IGZhdm9yaXRlIGxhbmd1YWdlLCBwbGVhc2UsIGZpcm1seSBncmFzcCwKVGhlIGRyZWFtcyB3ZSBvbmNlIHdvdmUsIGxpa2UgdGhyZWFkcyB0aHJvdWdoIHRoZSBuaWdodCwKQW5kIHRvZ2V0aGVyLCBsZXQncyByZWNsYWltIG91ciBwb2V0aWMgZmxpZ2h0Lg==
